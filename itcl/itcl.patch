diff -Naur itcl/generic/itcl_cmds.c ITCL_BLD/generic/itcl_cmds.c
--- itcl/generic/itcl_cmds.c	2024-08-06 13:13:08.429776852 -0400
+++ ITCL_BLD/generic/itcl_cmds.c	2024-08-06 13:12:35.230286310 -0400
@@ -53,9 +53,6 @@
         if {[info exists library]} {\n\
             lappend dirs $library\n\
         } else {\n\
-            if {[catch {uplevel #0 source -rsrc itcl}] == 0} {\n\
-                return\n\
-            }\n\
             set dirs {}\n\
             if {[info exists env(ITCL_LIBRARY)]} {\n\
                 lappend dirs $env(ITCL_LIBRARY)\n\
@@ -866,7 +863,7 @@
     int objc;                /* number of arguments */
     Tcl_Obj *CONST objv[];   /* argument objects */
 {
-    int pLevel = (int)clientData;
+    int pLevel = (int)(size_t)clientData;
 
     int result;
     int oldLevel;
@@ -1145,7 +1142,7 @@
         if (!entry) {
             Tcl_AppendResult(interp,
                 "can't scope variable \"", token,
-                "\": missing object context\"",
+                "\": missing object context",
                 (char*)NULL);
             result = TCL_ERROR;
             goto scopeCmdDone;
diff -Naur itcl/generic/itclInt.decls ITCL_BLD/generic/itclInt.decls
--- itcl/generic/itclInt.decls	2024-08-06 13:13:08.429776852 -0400
+++ ITCL_BLD/generic/itclInt.decls	2024-08-06 13:12:35.230286310 -0400
@@ -252,7 +252,7 @@
         CONST char* arglist, CONST char* body, ItclMemberCode** mcodePtr)
 }
 declare 58 generic {
-    void Itcl_DeleteMemberCode (CONST char* cdata)
+    void Itcl_DeleteMemberCode (char* cdata)
 }
 declare 59 generic {
     int Itcl_GetMemberCode (Tcl_Interp* interp, ItclMember* member)
diff -Naur itcl/generic/itclIntDecls.h ITCL_BLD/generic/itclIntDecls.h
--- itcl/generic/itclIntDecls.h	2024-08-06 13:13:08.429776852 -0400
+++ ITCL_BLD/generic/itclIntDecls.h	2024-08-06 13:12:35.230286310 -0400
@@ -410,7 +410,7 @@
 #ifndef Itcl_DeleteMemberCode_TCL_DECLARED
 #define Itcl_DeleteMemberCode_TCL_DECLARED
 /* 58 */
-TCL_EXTERN(void)	Itcl_DeleteMemberCode _ANSI_ARGS_((CONST char* cdata));
+TCL_EXTERN(void)	Itcl_DeleteMemberCode _ANSI_ARGS_((char* cdata));
 #endif
 #ifndef Itcl_GetMemberCode_TCL_DECLARED
 #define Itcl_GetMemberCode_TCL_DECLARED
@@ -853,7 +853,7 @@
     int (*itcl_ChangeMemberFunc) _ANSI_ARGS_((Tcl_Interp* interp, ItclMemberFunc* mfunc, CONST char* arglist, CONST char* body)); /* 55 */
     void (*itcl_DeleteMemberFunc) _ANSI_ARGS_((CONST char* cdata)); /* 56 */
     int (*itcl_CreateMemberCode) _ANSI_ARGS_((Tcl_Interp* interp, ItclClass * cdefn, CONST char* arglist, CONST char* body, ItclMemberCode** mcodePtr)); /* 57 */
-    void (*itcl_DeleteMemberCode) _ANSI_ARGS_((CONST char* cdata)); /* 58 */
+    void (*itcl_DeleteMemberCode) _ANSI_ARGS_((char* cdata)); /* 58 */
     int (*itcl_GetMemberCode) _ANSI_ARGS_((Tcl_Interp* interp, ItclMember* member)); /* 59 */
     void *reserved60;
     int (*itcl_EvalMemberCode) _ANSI_ARGS_((Tcl_Interp * interp, ItclMemberFunc * mfunc, ItclMember * member, ItclObject * contextObj, int objc, Tcl_Obj *CONST objv[])); /* 61 */
diff -Naur itcl/generic/itcl_methods.c ITCL_BLD/generic/itcl_methods.c
--- itcl/generic/itcl_methods.c	2024-08-06 13:13:08.429776852 -0400
+++ ITCL_BLD/generic/itcl_methods.c	2024-08-06 13:12:35.230286310 -0400
@@ -731,8 +731,7 @@
  * ------------------------------------------------------------------------
  */
 void
-Itcl_DeleteMemberCode(cdata)
-    CONST char* cdata;  /* pointer to member function definition */
+Itcl_DeleteMemberCode(char *cdata)
 {
     ItclMemberCode* mcode = (ItclMemberCode*)cdata;
 
@@ -1156,7 +1155,7 @@
     nameLen = strlen(name);
 
     localPtr = (CompiledLocal*)ckalloc(
-        (unsigned)(sizeof(CompiledLocal)-sizeof(localPtr->name) + nameLen+1)
+        TclOffset(CompiledLocal, name) + nameLen+1
     );
 
     localPtr->nextPtr = NULL;
diff -Naur itcl/win/itcl.rc ITCL_BLD/win/itcl.rc
--- itcl/win/itcl.rc	1969-12-31 19:00:00.000000000 -0500
+++ ITCL_BLD/win/itcl.rc	2024-08-06 13:12:35.230286310 -0400
@@ -0,0 +1,55 @@
+//
+// Version resource script.
+//
+
+#include <winver.h>
+#include <itcl.h>
+
+//
+// build-up the name suffix that defines the type of build this is.
+//
+#if DEBUG && !UNCHECKED
+#define SUFFIX_DEBUG	    "g"
+#else
+#define SUFFIX_DEBUG	    ""
+#endif
+
+#define SUFFIX		    SUFFIX_DEBUG
+
+
+VS_VERSION_INFO VERSIONINFO
+ FILEVERSION	ITCL_MAJOR_VERSION,ITCL_MINOR_VERSION,ITCL_RELEASE_LEVEL,ITCL_RELEASE_SERIAL
+ PRODUCTVERSION	ITCL_MAJOR_VERSION,ITCL_MINOR_VERSION,ITCL_RELEASE_LEVEL,ITCL_RELEASE_SERIAL
+ FILEFLAGSMASK	0x3fL
+#ifdef DEBUG
+ FILEFLAGS 	VS_FF_DEBUG
+#else
+ FILEFLAGS 	0x0L
+#endif
+ FILEOS 	VOS__WINDOWS32
+ FILETYPE 	VFT_DLL
+ FILESUBTYPE	0x0L
+BEGIN
+    BLOCK "StringFileInfo"
+    BEGIN
+	BLOCK "040904b0"
+	BEGIN
+	    VALUE "FileDescription", "Itcl language extension for Tcl\0"
+	    VALUE "Authors", "Michael McLennan\0"
+	    VALUE "OriginalFilename", "itcl" STRINGIFY(ITCL_MAJOR_VERSION) STRINGIFY(ITCL_MINOR_VERSION) SUFFIX ".dll\0"
+	    VALUE "CompanyName", "Bell Labs Innovations for Lucent Technologies\0"
+	    VALUE "FileVersion", ITCL_PATCH_LEVEL
+	    VALUE "LegalCopyright", "Copyright \251 1993-2004\0"
+	    VALUE "ProductName", "[Incr Tcl] " ITCL_VERSION " for Windows\0"
+	    VALUE "ProductVersion", ITCL_PATCH_LEVEL
+	END
+    END
+    BLOCK "VarFileInfo"
+    BEGIN
+	VALUE "Translation", 0x409, 1200
+    END
+END
+
+
+
+
