# Unless we have ENABLE_ALL set, base the building of strclear on
# the system detection results
if (ENABLE_ALL AND NOT DEFINED ENABLE_STRCLEAR)
  set(ENABLE_STRCLEAR ON)
endif (ENABLE_ALL AND NOT DEFINED ENABLE_STRCLEAR)

if (NOT ENABLE_STRCLEAR)

  find_package(STRCLEAR)

  if (NOT STRCLEAR_FOUND AND NOT DEFINED ENABLE_STRCLEAR)
    set(ENABLE_STRCLEAR "ON" CACHE BOOL "Enable strclear build")
  endif (NOT STRCLEAR_FOUND AND NOT DEFINED ENABLE_STRCLEAR)

endif (NOT ENABLE_STRCLEAR)
set(ENABLE_STRCLEAR "${ENABLE_STRCLEAR}" CACHE BOOL "Enable strclear build")

if (ENABLE_STRCLEAR)

    ExternalProject_Add(STRCLEAR_BLD
    URL "${CMAKE_CURRENT_SOURCE_DIR}/strclear"
    BUILD_ALWAYS ${EXT_BUILD_ALWAYS} ${LOG_OPTS}
    CMAKE_ARGS
    ${BUILD_TYPE_SPECIFIER}
    -DBIN_DIR=${BIN_DIR}
    -DLIB_DIR=${LIB_DIR}
    -DDATA_DIR=${DATA_DIR}
    -DBUILD_STATIC_LIBS=${BUILD_STATIC_LIBS}
    -DCMAKE_CXX_COMPILER=${CMAKE_CXX_COMPILER}
    -DCMAKE_C_COMPILER=${CMAKE_C_COMPILER}
    -DCMAKE_INSTALL_PREFIX=${CMAKE_NOBUNDLE_INSTALL_PREFIX}
    LOG_CONFIGURE ${EXT_BUILD_QUIET}
    LOG_BUILD ${EXT_BUILD_QUIET}
    LOG_INSTALL ${EXT_BUILD_QUIET}
    LOG_OUTPUT_ON_FAILURE ${EXT_BUILD_QUIET}
    STEP_TARGETS install
    )

  if (TARGET PATCH_BLD)
    ExternalProject_Add_StepDependencies(STRCLEAR_BLD configure PATCH_BLD-install)
  endif (TARGET PATCH_BLD)

endif (ENABLE_STRCLEAR)

# tab-width: 8
# mode: cmake
# indent-tabs-mode: t
# End:
# ex: shiftwidth=2 tabstop=8

