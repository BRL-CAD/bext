--- opennurbs/opennurbs_compress.cpp	2024-02-16 13:44:43.180776089 -0500
+++ OPENNURBS_BLD/opennurbs_compress.cpp	2024-02-16 14:45:58.122707316 -0500
@@ -128,7 +128,7 @@
     // compressed output in m_zlib.strm.next_out[], or do both.
 
     // provide storage for compressed stream output
-    strm.next_out  = (z_Bytef*)out_buffer;
+    strm.next_out  = (Bytef*)out_buffer;
     strm.avail_out = sizeof_out_buffer;
 
     if ( strm.avail_in <= 0 )
@@ -142,7 +142,7 @@
       ON__UINT64 sz = (size > max_sz) ? max_sz : size;
       m_in_size += sz;
       m_in_crc = ON_CRC32(m_in_crc,(size_t)sz,uncompressed_buffer); // (size_t) cast is safe because sz <= max_sz = 0x7FFFFFF0
-      strm.next_in = (z_Bytef*)uncompressed_buffer;
+      strm.next_in = (Bytef*)uncompressed_buffer;
       strm.avail_in = (ON__UINT32)sz;
       uncompressed_buffer = ((const unsigned char*)uncompressed_buffer) + sz;
       size -= sz;
@@ -152,7 +152,7 @@
     // calculate compression
     ON__UINT32 avail_in0 = strm.avail_in;
     ON__UINT32 avail_out0 = strm.avail_out;
-    zrc = z_deflate( &strm, Z_NO_FLUSH ); 
+    zrc = deflate( &strm, Z_NO_FLUSH ); 
     if ( zrc < 0 ) 
     {
       // Something went haywire - bail out.
@@ -235,11 +235,11 @@
     // provide storage for compressed stream output
     strm.avail_in = 0;
     strm.next_in = 0;
-    strm.next_out  = (z_Bytef*)out_buffer;
+    strm.next_out  = (Bytef*)out_buffer;
     strm.avail_out = sizeof_out_buffer;
 
     // finish compression calculation
-    zrc = z_deflate( &strm, Z_FINISH ); 
+    zrc = deflate( &strm, Z_FINISH ); 
     if ( zrc < 0 ) 
     {
       // Something went haywire - bail out.
@@ -446,7 +446,7 @@
     // uncompressed output in strm.next_out[], or do both.
 
     // provide storage for uncompressed stream output
-    strm.next_out  = (z_Bytef*)out_buffer;
+    strm.next_out  = (Bytef*)out_buffer;
     strm.avail_out = sizeof_out_buffer;
 
     if ( strm.avail_in <= 0 )
@@ -460,7 +460,7 @@
       ON__UINT64 sz = (size > max_sz) ? max_sz : size;
       m_in_size += sz;
       m_in_crc = ON_CRC32(m_in_crc,(size_t)sz,compressed_buffer); // (size_t) cast is safe because sz <= max_sz = 0x7FFFFFF0
-      strm.next_in = (z_Bytef*)compressed_buffer;
+      strm.next_in = (Bytef*)compressed_buffer;
       strm.avail_in = (ON__UINT32)sz;
       compressed_buffer = ((const unsigned char*)compressed_buffer) + sz;
       size -= sz;
@@ -470,7 +470,7 @@
     // calculate compression
     ON__UINT32 avail_in0 = strm.avail_in;
     ON__UINT32 avail_out0 = strm.avail_out;
-    zrc = z_inflate( &strm, Z_NO_FLUSH ); 
+    zrc = inflate( &strm, Z_NO_FLUSH ); 
     if ( zrc < 0 ) 
     {
       // Something went haywire - bail out.
@@ -553,11 +553,11 @@
     // provide storage for compressed stream output
     strm.avail_in = 0;
     strm.next_in = 0;
-    strm.next_out  = (z_Bytef*)out_buffer;
+    strm.next_out  = (Bytef*)out_buffer;
     strm.avail_out = sizeof_out_buffer;
 
     // finish compression calculation
-    zrc = z_inflate( &strm, Z_FINISH ); 
+    zrc = inflate( &strm, Z_FINISH ); 
     if ( zrc < 0 ) 
     {
       // Something went haywire - bail out.
--- opennurbs/opennurbs_zlib.cpp	2024-02-16 13:44:43.196775827 -0500
+++ OPENNURBS_BLD/opennurbs_zlib.cpp	2024-02-16 14:47:11.701454969 -0500
@@ -21,6 +21,7 @@
 #error ON_COMPILING_OPENNURBS must be defined when compiling opennurbs
 #endif
 
+#if 0
 #include "opennurbs_zlib.h"
 
 #if defined(ON_COMPILER_MSC) && !defined(ON_CMAKE_BUILD)
@@ -52,6 +53,8 @@
 
 #endif
 
+#endif
+
 // compressed buffer I/O uses zlib 1.1.3 inflate()/deflate()
 class ON_CompressorImplementation
 {
@@ -319,11 +322,11 @@
       // no uncompressed input is left - switch to finish mode
       flush = Z_FINISH;
     }
-    zrc = z_deflate(&m_zlib.m_strm, flush);
+    zrc = deflate(&m_zlib.m_strm, flush);
     if ( zrc < 0 ) 
     {
       // Something went haywire - bail out.
-      ON_ERROR("ON_BinaryArchive::WriteDeflate - z_deflate failure");
+      ON_ERROR("ON_BinaryArchive::WriteDeflate - deflate failure");
       rc = false;
       break;
     }
@@ -519,11 +522,11 @@
       // no compressed input is left - switch to finish mode
       flush = Z_FINISH;
     }
-    zrc = z_inflate( &m_zlib.m_strm, flush );
+    zrc = inflate( &m_zlib.m_strm, flush );
     if ( zrc < 0 ) 
     {
       // Something went haywire - bail out.
-      ON_ERROR("ON_BinaryArchive::ReadInflate - z_inflate failure");
+      ON_ERROR("ON_BinaryArchive::ReadInflate - inflate failure");
       rc = false;
       break;
     }
@@ -1200,11 +1203,11 @@
       // no uncompressed input is left - switch to finish mode
       flush = Z_FINISH;
     }
-    zrc = z_deflate( &m_zlib.m_strm, flush ); 
+    zrc = deflate( &m_zlib.m_strm, flush ); 
     if ( zrc < 0 ) 
     {
       // Something went haywire - bail out.
-      ON_ERROR("ON_CompressedBuffer::DeflateHelper - z_deflate failure");
+      ON_ERROR("ON_CompressedBuffer::DeflateHelper - deflate failure");
       rc = false;
       break;
     }
@@ -1333,11 +1336,11 @@
       // no compressed input is left - switch to finish mode
       flush = Z_FINISH;
     }
-    zrc = z_inflate( &m_zlib.m_strm, flush );
+    zrc = inflate( &m_zlib.m_strm, flush );
     if ( zrc < 0 ) 
     {
       // Something went haywire - bail out.
-      ON_ERROR("ON_CompressedBuffer::InflateHelper - z_inflate failure");
+      ON_ERROR("ON_CompressedBuffer::InflateHelper - inflate failure");
       rc = false;
       break;
     }
--- opennurbs/opennurbs_zlib.h	2024-02-16 13:44:43.196775827 -0500
+++ OPENNURBS_BLD/opennurbs_zlib.h	2024-02-16 14:47:52.060767871 -0500
@@ -37,7 +37,7 @@
 #endif
 
 #pragma ON_PRAGMA_WARNING_BEFORE_DIRTY_INCLUDE
-#include "./zlib/zlib.h"
+#include "zlib.h"
 #pragma ON_PRAGMA_WARNING_AFTER_DIRTY_INCLUDE
 
 ON_BEGIN_EXTERNC
