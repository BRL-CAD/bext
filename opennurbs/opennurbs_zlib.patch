--- opennurbs/opennurbs_compress.cpp	2023-09-09 13:52:46.157646417 -0400
+++ openNURBS/opennurbs_compress.cpp	2023-09-09 13:43:33.712976340 -0400
@@ -131,7 +131,7 @@
     // compressed output in m_zlib.strm.next_out[], or do both.
 
     // provide storage for compressed stream output
-    strm.next_out  = (z_Bytef*)out_buffer;
+    strm.next_out  = (Bytef*)out_buffer;
     strm.avail_out = sizeof_out_buffer;
 
     if ( strm.avail_in <= 0 )
@@ -145,7 +145,7 @@
       ON__UINT64 sz = (size > max_sz) ? max_sz : size;
       m_in_size += sz;
       m_in_crc = ON_CRC32(m_in_crc,(size_t)sz,uncompressed_buffer); // (size_t) cast is safe because sz <= max_sz = 0x7FFFFFF0
-      strm.next_in = (z_Bytef*)uncompressed_buffer;
+      strm.next_in = (Bytef*)uncompressed_buffer;
       strm.avail_in = (ON__UINT32)sz;
       uncompressed_buffer = ((const unsigned char*)uncompressed_buffer) + sz;
       size -= sz;
@@ -155,7 +155,7 @@
     // calculate compression
     ON__UINT32 avail_in0 = strm.avail_in;
     ON__UINT32 avail_out0 = strm.avail_out;
-    zrc = z_deflate( &strm, Z_NO_FLUSH ); 
+    zrc = deflate( &strm, Z_NO_FLUSH );
     if ( zrc < 0 ) 
     {
       // Something went haywire - bail out.
@@ -238,11 +238,11 @@
     // provide storage for compressed stream output
     strm.avail_in = 0;
     strm.next_in = 0;
-    strm.next_out  = (z_Bytef*)out_buffer;
+    strm.next_out  = (Bytef*)out_buffer;
     strm.avail_out = sizeof_out_buffer;
 
     // finish compression calculation
-    zrc = z_deflate( &strm, Z_FINISH ); 
+    zrc = deflate( &strm, Z_FINISH );
     if ( zrc < 0 ) 
     {
       // Something went haywire - bail out.
@@ -449,7 +449,7 @@
     // uncompressed output in strm.next_out[], or do both.
 
     // provide storage for uncompressed stream output
-    strm.next_out  = (z_Bytef*)out_buffer;
+    strm.next_out  = (Bytef*)out_buffer;
     strm.avail_out = sizeof_out_buffer;
 
     if ( strm.avail_in <= 0 )
@@ -463,7 +463,7 @@
       ON__UINT64 sz = (size > max_sz) ? max_sz : size;
       m_in_size += sz;
       m_in_crc = ON_CRC32(m_in_crc,(size_t)sz,compressed_buffer); // (size_t) cast is safe because sz <= max_sz = 0x7FFFFFF0
-      strm.next_in = (z_Bytef*)compressed_buffer;
+      strm.next_in = (Bytef*)compressed_buffer;
       strm.avail_in = (ON__UINT32)sz;
       compressed_buffer = ((const unsigned char*)compressed_buffer) + sz;
       size -= sz;
@@ -473,7 +473,7 @@
     // calculate compression
     ON__UINT32 avail_in0 = strm.avail_in;
     ON__UINT32 avail_out0 = strm.avail_out;
-    zrc = z_inflate( &strm, Z_NO_FLUSH ); 
+    zrc = inflate( &strm, Z_NO_FLUSH );
     if ( zrc < 0 ) 
     {
       // Something went haywire - bail out.
@@ -556,11 +556,11 @@
     // provide storage for compressed stream output
     strm.avail_in = 0;
     strm.next_in = 0;
-    strm.next_out  = (z_Bytef*)out_buffer;
+    strm.next_out  = (Bytef*)out_buffer;
     strm.avail_out = sizeof_out_buffer;
 
     // finish compression calculation
-    zrc = z_inflate( &strm, Z_FINISH ); 
+    zrc = inflate( &strm, Z_FINISH );
     if ( zrc < 0 ) 
     {
       // Something went haywire - bail out.
--- opennurbs/opennurbs_zlib.cpp	2023-12-20 11:23:16.233985604 -0500
+++ OPENNURBS_BLD/opennurbs_zlib.cpp	2023-12-20 11:22:15.431050084 -0500
@@ -23,6 +23,7 @@
 
 #include "opennurbs_zlib.h"
 
+#if 0
 #if defined(ON_COMPILER_MSC) && !defined(ON_CMAKE_BUILD)
 
 #if !defined(OPENNURBS_ZLIB_LIB_DIR)
@@ -39,7 +40,6 @@
 
 #endif
 
-
 #if defined(_LIB) && defined(_MT) && !defined(_DLL)
 // using Microsoft statically linked C-runtime
 #pragma message ( "Linking with zlib_mt.lib in " OPENNURBS_PP2STR(OPENNURBS_ZLIB_LIB_DIR) )
@@ -52,6 +52,8 @@
 
 #endif
 
+#endif
+
 // compressed buffer I/O uses zlib 1.1.3 inflate()/deflate()
 class ON_CompressorImplementation
 {
@@ -319,11 +321,11 @@
       // no uncompressed input is left - switch to finish mode
       flush = Z_FINISH;
     }
-    zrc = z_deflate(&m_zlib.m_strm, flush);
+    zrc = deflate(&m_zlib.m_strm, flush);
     if ( zrc < 0 ) 
     {
       // Something went haywire - bail out.
-      ON_ERROR("ON_BinaryArchive::WriteDeflate - z_deflate failure");
+      ON_ERROR("ON_BinaryArchive::WriteDeflate - deflate failure");
       rc = false;
       break;
     }
@@ -519,11 +521,11 @@
       // no compressed input is left - switch to finish mode
       flush = Z_FINISH;
     }
-    zrc = z_inflate( &m_zlib.m_strm, flush );
+    zrc = inflate( &m_zlib.m_strm, flush );
     if ( zrc < 0 ) 
     {
       // Something went haywire - bail out.
-      ON_ERROR("ON_BinaryArchive::ReadInflate - z_inflate failure");
+      ON_ERROR("ON_BinaryArchive::ReadInflate - inflate failure");
       rc = false;
       break;
     }
@@ -1200,11 +1202,11 @@
       // no uncompressed input is left - switch to finish mode
       flush = Z_FINISH;
     }
-    zrc = z_deflate( &m_zlib.m_strm, flush ); 
+    zrc = deflate( &m_zlib.m_strm, flush );
     if ( zrc < 0 ) 
     {
       // Something went haywire - bail out.
-      ON_ERROR("ON_CompressedBuffer::DeflateHelper - z_deflate failure");
+      ON_ERROR("ON_CompressedBuffer::DeflateHelper - deflate failure");
       rc = false;
       break;
     }
@@ -1333,11 +1335,11 @@
       // no compressed input is left - switch to finish mode
       flush = Z_FINISH;
     }
-    zrc = z_inflate( &m_zlib.m_strm, flush );
+    zrc = inflate( &m_zlib.m_strm, flush );
     if ( zrc < 0 ) 
     {
       // Something went haywire - bail out.
-      ON_ERROR("ON_CompressedBuffer::InflateHelper - z_inflate failure");
+      ON_ERROR("ON_CompressedBuffer::InflateHelper - inflate failure");
       rc = false;
       break;
     }
--- opennurbs/opennurbs_zlib.h	2023-12-20 11:23:14.434017100 -0500
+++ OPENNURBS_BLD/opennurbs_zlib.h	2023-12-20 11:22:19.146985000 -0500
@@ -37,7 +37,7 @@
 #endif
 
 #pragma ON_PRAGMA_WARNING_BEFORE_DIRTY_INCLUDE
-#include "./zlib/zlib.h"
+#include "zlib.h"
 #pragma ON_PRAGMA_WARNING_AFTER_DIRTY_INCLUDE
 
 ON_BEGIN_EXTERNC
