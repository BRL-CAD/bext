diff -Naur zlib/deflate.c ZLIB_BLD/deflate.c
--- zlib/deflate.c	2024-10-09 13:07:47.877000463 -0400
+++ ZLIB_BLD/deflate.c	2024-10-09 13:07:27.611336342 -0400
@@ -52,7 +52,7 @@
 #include "deflate.h"
 
 const char deflate_copyright[] =
-   " deflate 1.3.1 Copyright 1995-2024 Jean-loup Gailly and Mark Adler ";
+   " deflate 1.3.1-brl Copyright 1995-2024 Jean-loup Gailly and Mark Adler ";
 /*
   If you use the zlib library in a product, an acknowledgment is welcome
   in the documentation of your product. If for some reason you cannot
diff -Naur zlib/gzguts.h ZLIB_BLD/gzguts.h
--- zlib/gzguts.h	2024-10-09 13:07:47.877000463 -0400
+++ ZLIB_BLD/gzguts.h	2024-10-09 13:07:27.611336342 -0400
@@ -25,6 +25,10 @@
 #  include <limits.h>
 #endif
 
+#ifdef Z_HAVE_UNISTD_H
+#  include <unistd.h>
+#endif
+
 #ifndef _POSIX_SOURCE
 #  define _POSIX_SOURCE
 #endif
diff -Naur zlib/gzread.c ZLIB_BLD/gzread.c
--- zlib/gzread.c	2024-10-09 13:07:47.877000463 -0400
+++ ZLIB_BLD/gzread.c	2024-10-09 13:07:27.611336342 -0400
@@ -400,9 +400,7 @@
 }
 
 /* -- see zlib.h -- */
-#ifdef Z_PREFIX_SET
-#  undef z_gzgetc
-#else
+#ifdef gzgetc
 #  undef gzgetc
 #endif
 int ZEXPORT gzgetc(gzFile file) {
diff -Naur zlib/inftrees.c ZLIB_BLD/inftrees.c
--- zlib/inftrees.c	2024-10-09 13:07:47.877000463 -0400
+++ ZLIB_BLD/inftrees.c	2024-10-09 13:07:27.612336325 -0400
@@ -9,7 +9,7 @@
 #define MAXBITS 15
 
 const char inflate_copyright[] =
-   " inflate 1.3.1 Copyright 1995-2024 Mark Adler ";
+   " inflate 1.3.1-brl Copyright 1995-2024 Mark Adler ";
 /*
   If you use the zlib library in a product, an acknowledgment is welcome
   in the documentation of your product. If for some reason you cannot
diff -Naur zlib/zconf.h.in ZLIB_BLD/zconf.h.in
--- zlib/zconf.h.in	2024-10-09 13:07:47.878000446 -0400
+++ ZLIB_BLD/zconf.h.in	2024-10-09 13:07:27.613336308 -0400
@@ -3,8 +3,6 @@
  * For conditions of distribution and use, see copyright notice in zlib.h
  */
 
-/* @(#) $Id$ */
-
 #ifndef ZCONF_H
 #define ZCONF_H
 
@@ -14,157 +12,186 @@
  * Even better than compiling with -DZ_PREFIX would be to use configure to set
  * this permanently in zconf.h using "./configure --zprefix".
  */
-#ifdef Z_PREFIX     /* may be set to #if 1 by ./configure */
+
+#cmakedefine Z_PREFIX 1
+#cmakedefine Z_PREFIX_STR @Z_PREFIX_STR@
+#ifdef Z_PREFIX
+
 #  define Z_PREFIX_SET
 
+/* Allow a user configurable prefix string, defaulting to "z_" */
+#  if !defined(Z_PREFIX_STR)
+#    define Z_PREFIX_STR z_
+#  endif
+#  define ZLIB_CONCAT2(a, b) a ## b
+#  define ZLIB_CONCAT(a, b) ZLIB_CONCAT2(a,b)
+#  define Z_ADD_PREFIX(b) ZLIB_CONCAT(Z_PREFIX_STR,b)
+
+/*
+ * For macros the standard prefix is always used, as we can't define them using
+ * names constructed using arbitrary Z_PREFIX_ value -- but luckily this
+ * doesn't matter anyhow, because we can't have link-time conflicts for macros.
+ */
+#define Z_ADD_PREFIX_STD(name) ZLIB_CONCAT(z_, name)
+
+#if 0
+/* For debug messages */
+#define STR_HELPER(x) #x
+#define STR(x) STR_HELPER(x)
+#pragma message("define _dist_code: " STR(_dist_code))
+#endif
+
 /* all linked symbols and init macros */
-#  define _dist_code            z__dist_code
-#  define _length_code          z__length_code
-#  define _tr_align             z__tr_align
-#  define _tr_flush_bits        z__tr_flush_bits
-#  define _tr_flush_block       z__tr_flush_block
-#  define _tr_init              z__tr_init
-#  define _tr_stored_block      z__tr_stored_block
-#  define _tr_tally             z__tr_tally
-#  define adler32               z_adler32
-#  define adler32_combine       z_adler32_combine
-#  define adler32_combine64     z_adler32_combine64
-#  define adler32_z             z_adler32_z
+#  define _dist_code            Z_ADD_PREFIX(_dist_code)
+#  define _length_code          Z_ADD_PREFIX(_length_code)
+#  define _tr_align             Z_ADD_PREFIX(_tr_align)
+#  define _tr_flush_bits        Z_ADD_PREFIX(_tr_flush_bits)
+#  define _tr_flush_block       Z_ADD_PREFIX(_tr_flush_block)
+#  define _tr_init              Z_ADD_PREFIX(_tr_init)
+#  define _tr_stored_block      Z_ADD_PREFIX(_tr_stored_block)
+#  define _tr_tally             Z_ADD_PREFIX(_tr_tally)
+#  define adler32               Z_ADD_PREFIX(adler32)
+#  define adler32_combine       Z_ADD_PREFIX(adler32_combine)
+#  define adler32_combine64     Z_ADD_PREFIX(adler32_combine64)
+#  define adler32_z             Z_ADD_PREFIX(adler32_z)
 #  ifndef Z_SOLO
-#    define compress              z_compress
-#    define compress2             z_compress2
-#    define compressBound         z_compressBound
-#  endif
-#  define crc32                 z_crc32
-#  define crc32_combine         z_crc32_combine
-#  define crc32_combine64       z_crc32_combine64
-#  define crc32_combine_gen     z_crc32_combine_gen
-#  define crc32_combine_gen64   z_crc32_combine_gen64
-#  define crc32_combine_op      z_crc32_combine_op
-#  define crc32_z               z_crc32_z
-#  define deflate               z_deflate
-#  define deflateBound          z_deflateBound
-#  define deflateCopy           z_deflateCopy
-#  define deflateEnd            z_deflateEnd
-#  define deflateGetDictionary  z_deflateGetDictionary
-#  define deflateInit           z_deflateInit
-#  define deflateInit2          z_deflateInit2
-#  define deflateInit2_         z_deflateInit2_
-#  define deflateInit_          z_deflateInit_
-#  define deflateParams         z_deflateParams
-#  define deflatePending        z_deflatePending
-#  define deflatePrime          z_deflatePrime
-#  define deflateReset          z_deflateReset
-#  define deflateResetKeep      z_deflateResetKeep
-#  define deflateSetDictionary  z_deflateSetDictionary
-#  define deflateSetHeader      z_deflateSetHeader
-#  define deflateTune           z_deflateTune
-#  define deflate_copyright     z_deflate_copyright
-#  define get_crc_table         z_get_crc_table
+#    define compress              Z_ADD_PREFIX(compress)
+#    define compress2             Z_ADD_PREFIX(compress2)
+#    define compressBound         Z_ADD_PREFIX(compressBound)
+#  endif
+#  define crc32                 Z_ADD_PREFIX(crc32)
+#  define crc32_combine         Z_ADD_PREFIX(crc32_combine)
+#  define crc32_combine64       Z_ADD_PREFIX(crc32_combine64)
+#  define crc32_combine_gen     Z_ADD_PREFIX(crc32_combine_gen)
+#  define crc32_combine_gen64   Z_ADD_PREFIX(crc32_combine_gen64)
+#  define crc32_combine_op      Z_ADD_PREFIX(crc32_combine_op)
+#  define crc32_z               Z_ADD_PREFIX(crc32_z)
+#  define deflate               Z_ADD_PREFIX(deflate)
+#  define deflateBound          Z_ADD_PREFIX(deflateBound)
+#  define deflateCopy           Z_ADD_PREFIX(deflateCopy)
+#  define deflateEnd            Z_ADD_PREFIX(deflateEnd)
+#  define deflateGetDictionary  Z_ADD_PREFIX(deflateGetDictionary)
+#  define deflateInit           Z_ADD_PREFIX(deflateInit)
+#  define deflateInit2          Z_ADD_PREFIX(deflateInit2)
+#  define deflateInit2_         Z_ADD_PREFIX(deflateInit2_)
+#  define deflateInit_          Z_ADD_PREFIX(deflateInit_)
+#  define deflateParams         Z_ADD_PREFIX(deflateParams)
+#  define deflatePending        Z_ADD_PREFIX(deflatePending)
+#  define deflatePrime          Z_ADD_PREFIX(deflatePrime)
+#  define deflateReset          Z_ADD_PREFIX(deflateReset)
+#  define deflateResetKeep      Z_ADD_PREFIX(deflateResetKeep)
+#  define deflateSetDictionary  Z_ADD_PREFIX(deflateSetDictionary)
+#  define deflateSetHeader      Z_ADD_PREFIX(deflateSetHeader)
+#  define deflateTune           Z_ADD_PREFIX(deflateTune)
+#  define deflate_copyright     Z_ADD_PREFIX(deflate_copyright)
+#  define get_crc_table         Z_ADD_PREFIX(get_crc_table)
 #  ifndef Z_SOLO
-#    define gz_error              z_gz_error
-#    define gz_intmax             z_gz_intmax
-#    define gz_strwinerror        z_gz_strwinerror
-#    define gzbuffer              z_gzbuffer
-#    define gzclearerr            z_gzclearerr
-#    define gzclose               z_gzclose
-#    define gzclose_r             z_gzclose_r
-#    define gzclose_w             z_gzclose_w
-#    define gzdirect              z_gzdirect
-#    define gzdopen               z_gzdopen
-#    define gzeof                 z_gzeof
-#    define gzerror               z_gzerror
-#    define gzflush               z_gzflush
-#    define gzfread               z_gzfread
-#    define gzfwrite              z_gzfwrite
-#    define gzgetc                z_gzgetc
-#    define gzgetc_               z_gzgetc_
-#    define gzgets                z_gzgets
-#    define gzoffset              z_gzoffset
-#    define gzoffset64            z_gzoffset64
-#    define gzopen                z_gzopen
-#    define gzopen64              z_gzopen64
+#    define gz_error              Z_ADD_PREFIX(gz_error)
+#    define gz_intmax             Z_ADD_PREFIX(gz_intmax)
+#    define gz_strwinerror        Z_ADD_PREFIX(gz_strwinerror)
+#    define gzbuffer              Z_ADD_PREFIX(gzbuffer)
+#    define gzclearerr            Z_ADD_PREFIX(gzclearerr)
+#    define gzclose               Z_ADD_PREFIX(gzclose)
+#    define gzclose_r             Z_ADD_PREFIX(gzclose_r)
+#    define gzclose_w             Z_ADD_PREFIX(gzclose_w)
+#    define gzdirect              Z_ADD_PREFIX(gzdirect)
+#    define gzdopen               Z_ADD_PREFIX(gzdopen)
+#    define gzeof                 Z_ADD_PREFIX(gzeof)
+#    define gzerror               Z_ADD_PREFIX(gzerror)
+#    define gzflush               Z_ADD_PREFIX(gzflush)
+#    define gzfread               Z_ADD_PREFIX(gzfread)
+#    define gzfwrite              Z_ADD_PREFIX(gzfwrite)
+#    define gzgetc                Z_ADD_PREFIX(gzgetc)
+#    define gzgetc_               Z_ADD_PREFIX(gzgetc_)
+#    define gzgets                Z_ADD_PREFIX(gzgets)
+#    define gzoffset              Z_ADD_PREFIX(gzoffset)
+#    define gzoffset64            Z_ADD_PREFIX(gzoffset64)
+#    define gzopen                Z_ADD_PREFIX(gzopen)
+#    define gzopen64              Z_ADD_PREFIX(gzopen64)
 #    ifdef _WIN32
-#      define gzopen_w              z_gzopen_w
+#      define gzopen_w              Z_ADD_PREFIX(gzopen_w)
 #    endif
-#    define gzprintf              z_gzprintf
-#    define gzputc                z_gzputc
-#    define gzputs                z_gzputs
-#    define gzread                z_gzread
-#    define gzrewind              z_gzrewind
-#    define gzseek                z_gzseek
-#    define gzseek64              z_gzseek64
-#    define gzsetparams           z_gzsetparams
-#    define gztell                z_gztell
-#    define gztell64              z_gztell64
-#    define gzungetc              z_gzungetc
-#    define gzvprintf             z_gzvprintf
-#    define gzwrite               z_gzwrite
-#  endif
-#  define inflate               z_inflate
-#  define inflateBack           z_inflateBack
-#  define inflateBackEnd        z_inflateBackEnd
-#  define inflateBackInit       z_inflateBackInit
-#  define inflateBackInit_      z_inflateBackInit_
-#  define inflateCodesUsed      z_inflateCodesUsed
-#  define inflateCopy           z_inflateCopy
-#  define inflateEnd            z_inflateEnd
-#  define inflateGetDictionary  z_inflateGetDictionary
-#  define inflateGetHeader      z_inflateGetHeader
-#  define inflateInit           z_inflateInit
-#  define inflateInit2          z_inflateInit2
-#  define inflateInit2_         z_inflateInit2_
-#  define inflateInit_          z_inflateInit_
-#  define inflateMark           z_inflateMark
-#  define inflatePrime          z_inflatePrime
-#  define inflateReset          z_inflateReset
-#  define inflateReset2         z_inflateReset2
-#  define inflateResetKeep      z_inflateResetKeep
-#  define inflateSetDictionary  z_inflateSetDictionary
-#  define inflateSync           z_inflateSync
-#  define inflateSyncPoint      z_inflateSyncPoint
-#  define inflateUndermine      z_inflateUndermine
-#  define inflateValidate       z_inflateValidate
-#  define inflate_copyright     z_inflate_copyright
-#  define inflate_fast          z_inflate_fast
-#  define inflate_table         z_inflate_table
+#    define gzprintf              Z_ADD_PREFIX(gzprintf)
+#    define gzputc                Z_ADD_PREFIX(gzputc)
+#    define gzputs                Z_ADD_PREFIX(gzputs)
+#    define gzread                Z_ADD_PREFIX(gzread)
+#    define gzrewind              Z_ADD_PREFIX(gzrewind)
+#    define gzseek                Z_ADD_PREFIX(gzseek)
+#    define gzseek64              Z_ADD_PREFIX(gzseek64)
+#    define gzsetparams           Z_ADD_PREFIX(gzsetparams)
+#    define gztell                Z_ADD_PREFIX(gztell)
+#    define gztell64              Z_ADD_PREFIX(gztell64)
+#    define gzungetc              Z_ADD_PREFIX(gzungetc)
+#    define gzvprintf             Z_ADD_PREFIX(gzvprintf)
+#    define gzwrite               Z_ADD_PREFIX(gzwrite)
+#  endif
+#  define inflate               Z_ADD_PREFIX(inflate)
+#  define inflateBack           Z_ADD_PREFIX(inflateBack)
+#  define inflateBackEnd        Z_ADD_PREFIX(inflateBackEnd)
+#  define inflateBackInit       Z_ADD_PREFIX(inflateBackInit)
+#  define inflateBackInit_      Z_ADD_PREFIX(inflateBackInit_)
+#  define inflateCodesUsed      Z_ADD_PREFIX(inflateCodesUsed)
+#  define inflateCopy           Z_ADD_PREFIX(inflateCopy)
+#  define inflateEnd            Z_ADD_PREFIX(inflateEnd)
+#  define inflateGetDictionary  Z_ADD_PREFIX(inflateGetDictionary)
+#  define inflateGetHeader      Z_ADD_PREFIX(inflateGetHeader)
+#  define inflateInit           Z_ADD_PREFIX(inflateInit)
+#  define inflateInit2          Z_ADD_PREFIX(inflateInit2)
+#  define inflateInit2_         Z_ADD_PREFIX(inflateInit2_)
+#  define inflateInit_          Z_ADD_PREFIX(inflateInit_)
+#  define inflateMark           Z_ADD_PREFIX(inflateMark)
+#  define inflatePrime          Z_ADD_PREFIX(inflatePrime)
+#  define inflateReset          Z_ADD_PREFIX(inflateReset)
+#  define inflateReset2         Z_ADD_PREFIX(inflateReset2)
+#  define inflateResetKeep      Z_ADD_PREFIX(inflateResetKeep)
+#  define inflateSetDictionary  Z_ADD_PREFIX(inflateSetDictionary)
+#  define inflateSync           Z_ADD_PREFIX(inflateSync)
+#  define inflateSyncPoint      Z_ADD_PREFIX(inflateSyncPoint)
+#  define inflateUndermine      Z_ADD_PREFIX(inflateUndermine)
+#  define inflateValidate       Z_ADD_PREFIX(inflateValidate)
+#  define inflate_copyright     Z_ADD_PREFIX(inflate_copyright)
+#  define inflate_fast          Z_ADD_PREFIX(inflate_fast)
+#  define inflate_table         Z_ADD_PREFIX(inflate_table)
 #  ifndef Z_SOLO
-#    define uncompress            z_uncompress
-#    define uncompress2           z_uncompress2
+#    define uncompress            Z_ADD_PREFIX(uncompress)
+#    define uncompress2           Z_ADD_PREFIX(uncompress2)
 #  endif
-#  define zError                z_zError
+#  define zError                Z_ADD_PREFIX(zError)
 #  ifndef Z_SOLO
-#    define zcalloc               z_zcalloc
-#    define zcfree                z_zcfree
+#    define zcalloc               Z_ADD_PREFIX(zcalloc)
+#    define zcfree                Z_ADD_PREFIX(zcfree)
 #  endif
-#  define zlibCompileFlags      z_zlibCompileFlags
-#  define zlibVersion           z_zlibVersion
+#  define zlibCompileFlags      Z_ADD_PREFIX(zlibCompileFlags)
+#  define zlibVersion           Z_ADD_PREFIX(zlibVersion)
 
 /* all zlib typedefs in zlib.h and zconf.h */
-#  define Byte                  z_Byte
-#  define Bytef                 z_Bytef
-#  define alloc_func            z_alloc_func
-#  define charf                 z_charf
-#  define free_func             z_free_func
+#  define Byte                  Z_ADD_PREFIX(Byte)
+#  define Bytef                 Z_ADD_PREFIX(Bytef)
+#  define alloc_func            Z_ADD_PREFIX(alloc_func)
+#  define charf                 Z_ADD_PREFIX(charf)
+#  define free_func             Z_ADD_PREFIX(free_func)
 #  ifndef Z_SOLO
-#    define gzFile                z_gzFile
+#    define gzFile                Z_ADD_PREFIX(gzFile)
 #  endif
-#  define gz_header             z_gz_header
-#  define gz_headerp            z_gz_headerp
-#  define in_func               z_in_func
-#  define intf                  z_intf
-#  define out_func              z_out_func
-#  define uInt                  z_uInt
-#  define uIntf                 z_uIntf
-#  define uLong                 z_uLong
-#  define uLongf                z_uLongf
-#  define voidp                 z_voidp
-#  define voidpc                z_voidpc
-#  define voidpf                z_voidpf
+#  define gz_header             Z_ADD_PREFIX(gz_header)
+#  define gz_headerp            Z_ADD_PREFIX(gz_headerp)
+#  define in_func               Z_ADD_PREFIX(in_func)
+#  define intf                  Z_ADD_PREFIX(intf)
+#  define out_func              Z_ADD_PREFIX(out_func)
+#  define uInt                  Z_ADD_PREFIX(uInt)
+#  define uIntf                 Z_ADD_PREFIX(uIntf)
+#  define uLong                 Z_ADD_PREFIX(uLong)
+#  define uLongf                Z_ADD_PREFIX(uLongf)
+#  define voidp                 Z_ADD_PREFIX(voidp)
+#  define voidpc                Z_ADD_PREFIX(voidpc)
+#  define voidpf                Z_ADD_PREFIX(voidpf)
 
 /* all zlib structs in zlib.h and zconf.h */
-#  define gz_header_s           z_gz_header_s
-#  define internal_state        z_internal_state
+#  define gz_header_s           Z_ADD_PREFIX(gz_header_s)
+#  define internal_state        Z_ADD_PREFIX(internal_state)
+
+/* variable from zutil.h */
+#  define z_errmsg 		Z_ADD_PREFIX(z_errmsg)
 
 #endif
 
@@ -300,6 +327,14 @@
 #  endif
 #endif
 
+#ifndef Z_ARG /* function prototypes for stdarg */
+#  if defined(STDC) || defined(Z_HAVE_STDARG_H)
+#    define Z_ARG(args)  args
+#  else
+#    define Z_ARG(args)  ()
+#  endif
+#endif
+
 /* The following definitions for FAR are needed only for MSDOS mixed
  * model programming (small or medium model with some far allocations).
  * This was tested only with MSC; for other MSDOS compilers you may have
@@ -503,6 +538,29 @@
 #  define Z_WANT64
 #endif
 
+#if !defined(ZLIB_INTERNAL) && defined(Z_WANT64) && defined(Z_PREFIX_STR)
+/*
+ * It turns out that some of the functions defined above using custom prefix
+ * will actually be macros in this library build, so they must use standard
+ * prefix instead. Ugly, but we need to redefine them as we couldn't define
+ * them correctly from the beginning as Z_WANT64 wasn't available then yet.
+ */
+#  undef adler32_combine
+#  define adler32_combine       Z_ADD_PREFIX_STD(adler32_combine)
+#  undef crc32_combine
+#  define crc32_combine         Z_ADD_PREFIX_STD(crc32_combine)
+#  ifndef Z_SOLO
+#    undef gzoffset
+#    define gzoffset              Z_ADD_PREFIX_STD(gzoffset)
+#    undef gzopen
+#    define gzopen                Z_ADD_PREFIX_STD(gzopen)
+#    undef gzseek
+#    define gzseek                Z_ADD_PREFIX_STD(gzseek)
+#    undef gztell
+#    define gztell                Z_ADD_PREFIX_STD(gztell)
+#  endif
+#endif
+
 #if !defined(SEEK_SET) && !defined(Z_SOLO)
 #  define SEEK_SET        0       /* Seek from beginning of file.  */
 #  define SEEK_CUR        1       /* Seek from current position.  */
@@ -516,7 +574,7 @@
 #if !defined(_WIN32) && defined(Z_LARGE64)
 #  define z_off64_t off64_t
 #else
-#  if defined(_WIN32) && !defined(__GNUC__)
+#  if defined(_WIN32) && !defined(__GNUC__) && !defined(Z_SOLO)
 #    define z_off64_t __int64
 #  else
 #    define z_off64_t z_off_t
diff -Naur zlib/zlib.h.in ZLIB_BLD/zlib.h.in
--- zlib/zlib.h.in	2024-10-09 13:07:47.878000446 -0400
+++ ZLIB_BLD/zlib.h.in	2024-10-09 13:07:27.616336259 -0400
@@ -26,6 +26,11 @@
   The data format used by the zlib library is described by RFCs (Request for
   Comments) 1950 to 1952 in the files http://tools.ietf.org/html/rfc1950
   (zlib format), rfc1951 (deflate format) and rfc1952 (gzip format).
+
+  NOTE (2022-11-09): while this copy of Zlib is not intended to be functionally
+  altered from the upstream library, the sources are modified to allow a custom
+  prefix to be successfully defined for embedding without conflicting with
+  system Zlib versions - CY
 */
 
 #ifndef ZLIB_H
@@ -37,7 +42,7 @@
 extern "C" {
 #endif
 
-#define ZLIB_VERSION "1.3.1"
+#define ZLIB_VERSION "1.3.1.f-brl"
 #define ZLIB_VERNUM 0x1310
 #define ZLIB_VER_MAJOR 1
 #define ZLIB_VER_MINOR 3
@@ -1796,17 +1801,17 @@
                                      const char *version,
                                      int stream_size);
 #ifdef Z_PREFIX_SET
-#  define z_deflateInit(strm, level) \
+#  define @Z_PREFIX_STR@deflateInit(strm, level) \
           deflateInit_((strm), (level), ZLIB_VERSION, (int)sizeof(z_stream))
-#  define z_inflateInit(strm) \
+#  define @Z_PREFIX_STR@inflateInit(strm) \
           inflateInit_((strm), ZLIB_VERSION, (int)sizeof(z_stream))
-#  define z_deflateInit2(strm, level, method, windowBits, memLevel, strategy) \
+#  define @Z_PREFIX_STR@deflateInit2(strm, level, method, windowBits, memLevel, strategy) \
           deflateInit2_((strm),(level),(method),(windowBits),(memLevel),\
                         (strategy), ZLIB_VERSION, (int)sizeof(z_stream))
-#  define z_inflateInit2(strm, windowBits) \
+#  define @Z_PREFIX_STR@inflateInit2(strm, windowBits) \
           inflateInit2_((strm), (windowBits), ZLIB_VERSION, \
                         (int)sizeof(z_stream))
-#  define z_inflateBackInit(strm, windowBits, window) \
+#  define @Z_PREFIX_STR@inflateBackInit(strm, windowBits, window) \
           inflateBackInit_((strm), (windowBits), (window), \
                            ZLIB_VERSION, (int)sizeof(z_stream))
 #else
@@ -1841,8 +1846,8 @@
 };
 ZEXTERN int ZEXPORT gzgetc_(gzFile file);       /* backward compatibility */
 #ifdef Z_PREFIX_SET
-#  undef z_gzgetc
-#  define z_gzgetc(g) \
+#  undef @Z_PREFIX_STR@gzgetc
+#  define @Z_PREFIX_STR@gzgetc(g) \
           ((g)->have ? ((g)->have--, (g)->pos++, *((g)->next)++) : (gzgetc)(g))
 #else
 #  define gzgetc(g) \
@@ -1867,13 +1872,13 @@
 
 #if !defined(ZLIB_INTERNAL) && defined(Z_WANT64)
 #  ifdef Z_PREFIX_SET
-#    define z_gzopen z_gzopen64
-#    define z_gzseek z_gzseek64
-#    define z_gztell z_gztell64
-#    define z_gzoffset z_gzoffset64
-#    define z_adler32_combine z_adler32_combine64
-#    define z_crc32_combine z_crc32_combine64
-#    define z_crc32_combine_gen z_crc32_combine_gen64
+#    define @Z_PREFIX_STR@gzopen @Z_PREFIX_STR@gzopen64
+#    define @Z_PREFIX_STR@gzseek @Z_PREFIX_STR@gzseek64
+#    define @Z_PREFIX_STR@gztell @Z_PREFIX_STR@gztell64
+#    define @Z_PREFIX_STR@gzoffset @Z_PREFIX_STR@gzoffset64
+#    define @Z_PREFIX_STR@adler32_combine @Z_PREFIX_STR@adler32_combine64
+#    define @Z_PREFIX_STR@crc32_combine @Z_PREFIX_STR@crc32_combine64
+#    define @Z_PREFIX_STR@crc32_combine_gen @Z_PREFIX_STR@crc32_combine_gen64
 #  else
 #    define gzopen gzopen64
 #    define gzseek gzseek64
@@ -1925,9 +1930,9 @@
 #endif
 #if defined(STDC) || defined(Z_HAVE_STDARG_H)
 #  ifndef Z_SOLO
-ZEXTERN int            ZEXPORTVA gzvprintf(gzFile file,
-                                           const char *format,
-                                           va_list va);
+ZEXTERN int            ZEXPORTVA gzvprintf Z_ARG((gzFile file,
+                                                  const char *format,
+                                                  va_list va));
 #  endif
 #endif
 
