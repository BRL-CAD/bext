# This is less elegant than setting the RPATH, but if it works it's
# simpler than trying to inject the former into Qt's build logic
if (NOT WIN32)
  set(ENV{LD_LIBRARY_PATH} "@CMAKE_BUNDLE_INSTALL_PREFIX@/@LIB_DIR@")
endif (NOT WIN32)

if ("${CMAKE_BUILD_TYPE}" STREQUAL "" OR "${CMAKE_BUILD_TYPE}" STREQUAL "Debug")
  set(QT_CMAKE_OPTS "--config Debug --parallel 8")
elseif ("${CMAKE_BUILD_TYPE}" STREQUAL "Release")
  set(QT_CMAKE_OPTS "--config Release --parallel 8")
else ()
  message(WARNING "Unexpected CMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE} building Qt6")
endif ("${CMAKE_BUILD_TYPE}" STREQUAL "" OR "${CMAKE_BUILD_TYPE}" STREQUAL "Debug")

if (WIN32)
  execute_process(COMMAND "@VCVARS_BAT@" && ${CMAKE_COMMAND} --build . ${QT_CMAKE_OPTS} RESULT_VARIABLE QT_RET WORKING_DIRECTORY @QT_BUILD_DIR@ OUTPUT_VARIABLE MSG ERROR_VARIABLE MSG)
else (WIN32)
  execute_process(COMMAND ${CMAKE_COMMAND} --build . ${QT_CMAKE_OPTS} RESULT_VARIABLE QT_RET WORKING_DIRECTORY @QT_BUILD_DIR@ OUTPUT_VARIABLE MSG ERROR_VARIABLE MSG)
endif (WIN32)

if (QT_RET)
  message(FATAL_ERROR "Qt build failed: ${MSG}\n")
endif (QT_RET)

message("Qt build succeeded: ${MSG}\n")

# Local Variables:
# tab-width: 8
# mode: cmake
# indent-tabs-mode: t
# End:
# ex: shiftwidth=2 tabstop=8

